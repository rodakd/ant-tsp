var P=Object.defineProperty;var E=(c,n,i)=>n in c?P(c,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):c[n]=i;var a=(c,n,i)=>(E(c,typeof n!="symbol"?n+"":n,i),i);(function(){"use strict";const i=(s,t)=>{const[e,r]=s,[p,h]=t;if(r===h&&e===p)return 0;const d=Math.PI*r/180,l=Math.PI*h/180,M=e-p,y=Math.PI*M/180;let o=Math.sin(d)*Math.sin(l)+Math.cos(d)*Math.cos(l)*Math.cos(y);return o>1&&(o=1),o=Math.acos(o),o=o*180/Math.PI,o*60*1.1515*1.609344},m=s=>s!=null&&s.length?s.slice(0,-1).map((t,e)=>i(t,s[e+1])).reduce((t,e)=>t+e,0):0,f=s=>{let t=new u;onmessage=async e=>{var p;if(!((p=e==null?void 0:e.data)!=null&&p.type))return;const r=e.data;switch(r.type){case"run":t=new u,t.params=r.params,t.markers=r.markers,t.speedPercent=r.speedPercent,t.performanceMode=r.performanceMode,t.iterationsLimit=r.iterationsLimit,s(t,r.params).catch(()=>null);break;case"stop":t.running=!1;break;case"pause":t.paused=!0;break;case"resume":t.paused=!1;break;case"changeSpeed":t.speedPercent=r.speedPercent}}};class u{constructor(){a(this,"paused",!1);a(this,"running",!0);a(this,"bestTour",null);a(this,"currentTour",null);a(this,"iteration",0);a(this,"markers",[]);a(this,"params",{});a(this,"speedPercent",60);a(this,"performanceMode",!1);a(this,"iterationsLimit",null)}updateBestTour(t){this.bestTour=t,this.appDispatch({type:"updateBestTour",bestTour:t})}updateIteration(t){if(this.iteration=t,this.iterationsLimit&&this.iteration>this.iterationsLimit)return this.end();this.appDispatch({type:"updateIteration",iteration:t})}updateCurrentTour(t){this.currentTour=t,this.appDispatch({type:"updateCurrentTour",currentTour:t})}async sleep(){if(!this.running)throw"Stopped";if(this.performanceMode)return;for(;this.paused&&this.running;)await new Promise(e=>setTimeout(e,200));const t=500-this.speedPercent/100*500;return new Promise(e=>setTimeout(e,t))}log(t){this.appDispatch({type:"log",toLog:JSON.stringify(t)})}error(t){this.appDispatch({type:"error",text:t})}calculateCost(t){return m(t)}end(){throw this.appDispatch({type:"end"}),this.running=!1,"Stopped"}appDispatch(t){if(!this.running)throw"Stopped";postMessage(t)}}async function g(s){const t=globalThis;t.app=s;try{await Object.getPrototypeOf(async function(){}).constructor(s.params.code)()}catch(e){throw s.error(),e}finally{delete t.app}}f(g)})();
